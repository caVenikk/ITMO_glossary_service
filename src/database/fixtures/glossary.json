{
  "model": "GlossaryTerm",
  "unique_fields": ["term"],
  "data": [
    {
      "term": "Анализ функционала и производительности статического анализа",
      "definition": "Исследование подходов к оценке эффективности и функциональных возможностей систем статического анализа кода в контексте веб-приложений"
    },
    {
      "term": "API (Application Programming Interface)",
      "definition": "Интерфейс программирования приложений, набор правил и протоколов для взаимодействия между различными программными компонентами."
    },
    {
      "term": "CLI (Command Line Interface)",
      "definition": "Командный интерфейс, способ взаимодействия с компьютером через текстовые команды."
    },
    {
      "term": "DTO (Data Transfer Object)",
      "definition": "Объект передачи данных, используемый для передачи данных между процессами, часто в контексте сетевых взаимодействий."
    },
    {
      "term": "Flask",
      "definition": "Легковесный веб-фреймворк на языке Python, предназначенный для создания веб-приложений и RESTful API."
    },
    {
      "term": "Кэширование",
      "definition": "Процесс хранения данных в быстром доступе для уменьшения времени отклика и нагрузки на внешние сервисы."
    },
    {
      "term": "Python",
      "definition": "Высокоуровневый язык программирования, известный своей простотой и широким набором библиотек для различных задач, включая веб-разработку и анализ данных."
    },
    {
      "term": "Реляционная база данных",
      "definition": "Тип базы данных, в которой данные хранятся в таблицах и могут быть связаны между собой."
    },
    {
      "term": "SQLite",
      "definition": "Легковесная реляционная база данных, которая не требует отдельного серверного процесса и часто используется для небольших приложений."
    },
    {
      "term": "Статический анализ",
      "definition": "Метод анализа программного кода без его выполнения, используемый для обнаружения ошибок и уязвимостей."
    },
    {
      "term": "Тестовое приложение",
      "definition": "Приложение, разработанное для проведения экспериментов и анализа, часто с целью проверки теорий или методов."
    },
    {
      "term": "Внешние сервисы",
      "definition": "Сторонние приложения или API, которые предоставляют функционал или данные, используемые в основном приложении."
    },
    {
      "term": "Конфигурационный файл",
      "definition": "Файл, содержащий настройки и параметры, используемые приложением для его работы."
    },
    {
      "term": "Переменные окружения",
      "definition": "Параметры, которые могут быть установлены в операционной системе и используются приложением для настройки его поведения."
    },
    {
      "term": "Датаклассы (dataclasses)",
      "definition": "Специальный синтаксис в Python для создания классов, предназначенных для хранения данных, с минимальным количеством кода."
    },
    {
      "term": "RESTful API",
      "definition": "Архитектурный стиль для разработки веб-сервисов, который использует стандартные HTTP методы для взаимодействия с ресурсами."
    },
    {
      "term": "Нагрузка",
      "definition": "Количество запросов или операций, которые система должна обработать за определенный период времени, что позволяет оценить производительность системы."
    },
    {
      "term": "Масштабируемость",
      "definition": "Способность системы увеличивать свои ресурсы и производительность при росте нагрузки или объема данных."
    },
    {
      "term": "Устойчивость к отказам",
      "definition": "Способность системы продолжать функционировать корректно даже в случае возникновения ошибок или сбоев в работе отдельных компонентов."
    },
    {
      "term": "Интеграция",
      "definition": "Процесс объединения различных систем или компонентов для обеспечения их совместной работы."
    },
    {
      "term": "Схемы API",
      "definition": "Формальные описания структуры данных, которые используются в API, включая типы данных, обязательные и необязательные поля."
    },
    {
      "term": "Тестовые записи",
      "definition": "Фиктивные данные, используемые для проверки функциональности приложения и его взаимодействия с базой данных."
    },
    {
      "term": "Погода API",
      "definition": "Интерфейс программирования приложений, предоставляющий доступ к данным о погоде, которые могут быть использованы в приложениях для получения актуальной информации."
    },
    {
      "term": "PEP 8",
      "definition": "Документ, содержащий рекомендации по стилю кода на языке Python, направленный на улучшение читаемости и согласованности кода."
    },
    {
      "term": "Внешний API",
      "definition": "Интерфейс, предоставляемый сторонним сервисом, который позволяет другим приложениям взаимодействовать с его функционалом или данными."
    },
    {
      "term": "Объектно-ориентированное программирование (ООП)",
      "definition": "Парадигма программирования, основанная на использовании объектов, которые содержат как данные, так и методы для их обработки."
    },
    {
      "term": "Серверная часть",
      "definition": "Часть веб-приложения, которая обрабатывает запросы от клиентов, выполняет бизнес-логику и взаимодействует с базой данных."
    },
    {
      "term": "Фреймворк",
      "definition": "Набор инструментов и библиотек, предоставляющий структуру для разработки приложений, упрощая процесс создания и поддержки кода."
    },
    {
      "term": "Динамическая типизация",
      "definition": "Свойство языков программирования, позволяющее переменным менять тип данных во время выполнения программы."
    },
    {
      "term": "Статическая типизация",
      "definition": "Свойство языков программирования, при котором типы переменных определяются на этапе компиляции, что позволяет обнаруживать ошибки до выполнения программы."
    },
    {
      "term": "Системы статического анализа",
      "definition": "Инструменты, которые автоматически анализируют код на наличие ошибок, уязвимостей и несоответствий стандартам."
    }
  ]
}
